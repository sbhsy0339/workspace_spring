package kr.co.ca;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;

import org.apache.commons.io.IOUtils;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.co.utils.Utils;

@Controller
public class UploadAjaxController {
   private String uploadPath = "C:" + File.separator + "upload";

   @ResponseBody
   @RequestMapping(value = "/diplayfile", method = RequestMethod.GET)
   public ResponseEntity<byte[]> diplayfile(String filename) {
      ResponseEntity<byte[]> entity = null;
      InputStream in = null;
      try {
         int idx = filename.lastIndexOf(".");
         String format = filename.substring(idx + 1);

         MediaType mType = Utils.getMediaType(format);
         HttpHeaders headers = new HttpHeaders();
         in = new FileInputStream(uploadPath + filename);

         if (mType != null) {
            headers.setContentType(mType);
         } else {
            idx = filename.indexOf(".");
            String originalName = filename.substring(idx + 1);
            headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);
            headers.add("Content-Disposition",
                  "attachment;filename=\"" + new String(originalName.getBytes("UTF-8"), "ISO-8859-1"));
         }

         entity = new ResponseEntity<byte[]>(IOUtils.toByteArray(in), headers, HttpStatus.OK); // img 소스넣어주는 코드

      } catch (Exception e) {
         e.printStackTrace();
         entity = new ResponseEntity<byte[]>(HttpStatus.BAD_REQUEST);
      } finally {
         try {
            if (in != null)
               in.close();
         } catch (Exception e2) {
            e2.printStackTrace();
         }
      }
      return entity;

   }

   @RequestMapping(value = "/uploadajax", method = RequestMethod.GET)
   public void uploadajax() {

   }

   @ResponseBody
   @RequestMapping(value = "/uploadajax", method = RequestMethod.POST, produces = "text/plain;charset=UTF-8")
   public String uploadajax(MultipartHttpServletRequest request) throws Exception {
      MultipartFile file = request.getFile("file");
      String originalName = file.getOriginalFilename();
      String saveFileName = Utils.saveFile(originalName, file, uploadPath);
      return saveFileName;
   }
}