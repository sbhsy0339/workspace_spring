package kr.co.ca;

import java.io.File;
import java.io.InputStream;

import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.co.utils.Utils;

@Controller
public class UploadAjaxController {
	private String uploadPath = "C:"+File.separator+"upload";
	
	@ResponseBody
	@RequestMapping(value = "/displayfile", method = RequestMethod.GET)
	public ResponseEntity<byte[]> displayfile(String filename){
	   ResponseEntity<byte[]> entity = null;
	   
	   InputStream in = null;
	   
	   try {
		
		   int idx = filename.lastIndexOf(",");
		   String format = filename.substring(idx+1);
		   
		   MediaType mType = Utils.getMediaType(format);
		   HttpHeaders headers = new HttpHeaders();
		   if(mType != null) {
			   headers.setContentType(mType);
		   }else {
			   
		   }
	} catch (Exception e) {
		// TODO: handle exception
	}
	}
	
	@ResponseBody
	@RequestMapping(value = "/uploadajax", method=RequestMethod.POST, produces = "text/plain;charset=UTF-8")
	
	public String uploadajax(MultipartHttpServletRequest request) throws Exception {
		
		MultipartFile file = request.getFile("file");
		
		String originalName = file.getOriginalFilename();
		
		String saveFileName = Utils.saveFile(originalName, file, uploadPath);		
		
		return saveFileName;
	}
	
	
	@RequestMapping(value = "/uploadajax", method=RequestMethod.GET)
	public void uploadajax() {
		
String[] paths = Utils.makeDirName();
		
		File f = new File(uploadPath+paths[2]);
		if(f.exists()) {
			return;
		}
		
		
		for(String path : paths) {
			File dirPath = new File(uploadPath+path);
			if(!dirPath.exists()) {
				dirPath.mkdir();
			}
		}
	}
	
}
